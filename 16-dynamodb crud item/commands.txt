Write Data into DynamoDB Table with AWS CLI
---
AWS CLI example creates a new item into Order table using put-item.

aws dynamodb put-item \
    --table-name Order  \
    --item \
        '{"id": {"S": "1"}, "status": {"S": "IN_PROGRESS"}, "desc": {"S": "iphone order"}, "orderDate": {"S": "2022-05-15"}}'

aws dynamodb put-item \
    --table-name Order  \
    --item \
        '{"id": {"S": "1"}, "status": {"S": "DELIVERY"}, "desc": {"S": "samsung order"}, "orderDate": {"S": "2022-05-19"}}'

Read Data into DynamoDB Table with AWS CLI
---

aws dynamodb get-item --consistent-read \
    --table-name Order \
    --key '{ "id": {"S": "1"}, "status": {"S": "DELIVERY"}}'

Update Data into DynamoDB Table with AWS CLI
---
Run Command:

aws dynamodb update-item \
    --table-name Order \
    --key '{ "id": {"S": "1"}, "status": {"S": "DELIVERY"}}' \
    --update-expression "SET orderDate = :newval" \
    --expression-attribute-values '{":newval":{"S":"2022-06-06"}}' \
    --return-values ALL_NEW

Query Data into DynamoDB Table with AWS CLI
---
Run Command:

aws dynamodb query \
    --table-name Order \
    --key-condition-expression "id = :id" \
    --expression-attribute-values  '{ ":id":{"S":"1"}}'